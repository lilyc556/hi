


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: Lily Chieng, Ashiqa Momin
    3 00000000         ; Last modification date: 4/16/2020
    4 00000000         ; Runs on LM4F120 or TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000 00000000 
                       DIGIT   EQU              0           ;binding
   13 00000000        B 
                       FP      RN               11
   14 00000000         
   15 00000000                 IMPORT           ST7735_OutChar
   16 00000000                 IMPORT           ST7735_OutString
   17 00000000                 EXPORT           LCD_OutDec
   18 00000000                 EXPORT           LCD_OutFix
   19 00000000         
   20 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   21 00000000                 THUMB
   22 00000000         
   23 00000000         
   24 00000000         
   25 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   26 00000000         ; Output a 32-bit number in unsigned decimal format
   27 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   28 00000000         ; Output: none
   29 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   30 00000000         LCD_OutDec
   31 00000000 B510            PUSH             {R4,LR}
   32 00000002 B082            SUB              SP, #8      ;allocating
   33 00000004 F04F 020A       MOV              R2, #10
   34 00000008         
   35 00000008 280A    start   CMP              R0, #10
   36 0000000A D204            BHS              recur
   37 0000000C F100 0030       ADD              R0, #0x30   ;base case
   38 00000010 F7FF FFFE       BL               ST7735_OutChar
   39 00000014 E010            B                done
   40 00000016         
   41 00000016 4601    recur   MOV              R1, R0      ;R1 = R0 = 654
   42 00000018 FBB0 F0F2       UDIV             R0, R0, R2  ;R0 = 654/10 = 65
   43 0000001C FB00 F302       MUL              R3, R0, R2  ;R3 = 65 * 10 = 650
                                                            
   44 00000020 EBA1 0303       SUB              R3, R1, R3  ;R3 = 654-650 = 4 
   45 00000024 F103 0330       ADD              R3, #0x30
   46 00000028 F88D 3000       STRB             R3, [SP,#DIGIT] ;access 
   47 0000002C F7FF FFFE       BL               LCD_OutDec  ;OBJECTIVE SOMEHOW 
                                                            BL start
   48 00000030 F89D 0000       LDRB             R0, [SP,#DIGIT]
   49 00000034 F7FF FFFE       BL               ST7735_OutChar
   50 00000038         



ARM Macro Assembler    Page 2 


   51 00000038 B002    done    ADD              SP, #8      ;deallocating
   52 0000003A E8BD 4010       POP              {R4,LR}
   53 0000003E 4770            BX               LR
   54 00000040         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   55 00000040         
   56 00000040         ; -----------------------LCD _OutFix--------------------
                       --
   57 00000040         ; Output characters to LCD display in fixed-point format
                       
   58 00000040         ; unsigned decimal, resolution 0.01, range 0.00 to 9.99
   59 00000040         ; Inputs:  R0 is an unsigned 32-bit number
   60 00000040         ; Outputs: none
   61 00000040         ; E.g., R0=0,    then output "0.00 "
   62 00000040         ;       R0=3,    then output "0.03 "
   63 00000040         ;       R0=89,   then output "0.89 "
   64 00000040         ;       R0=123,  then output "1.23 "
   65 00000040         ;       R0=999,  then output "9.99 "
   66 00000040         ;       R0>999,  then output "*.** "
   67 00000040         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   68 00000040         LCD_OutFix
   69 00000040 F04F 0C00       MOV              R12, #0     ;R4 = . position co
                                                            unter   ;need to mo
                                                            ve this
   70 00000044         LCD_Fix
   71 00000044 B510            PUSH             {R4,LR}
   72 00000046 B082            SUB              SP, #8      ;allocating
   73 00000048 F04F 020A       MOV              R2, #10
   74 0000004C         
   75 0000004C F5B0 7F7A       CMP              R0, #1000
   76 00000050 D310            BLO              start2
   77 00000052 F04F 002A       MOV              R0, #0x2A   ;R0 = ASCII '*'
   78 00000056 F7FF FFFE       BL               ST7735_OutChar
   79 0000005A F04F 002E       MOV              R0, #0x2E
   80 0000005E F7FF FFFE       BL               ST7735_OutChar
   81 00000062 F04F 002A       MOV              R0, #0x2A
   82 00000066 F7FF FFFE       BL               ST7735_OutChar
   83 0000006A F04F 002A       MOV              R0, #0x2A
   84 0000006E F7FF FFFE       BL               ST7735_OutChar
   85 00000072 E01D            B                done2
   86 00000074         
   87 00000074         
   88 00000074 F1BC 0F02 
                       start2  CMP              R12, #2
   89 00000078 D304            BLO              recur2
   90 0000007A F100 0030       ADD              R0, #0x30   ;base case
   91 0000007E F7FF FFFE       BL               ST7735_OutChar
   92 00000082 E015            B                done2
   93 00000084         
   94 00000084 4601    recur2  MOV              R1, R0      ;R1 = R0 = 654
   95 00000086 FBB0 F0F2       UDIV             R0, R0, R2  ;R0 = 654/10 = 65
   96 0000008A FB00 F302       MUL              R3, R0, R2  ;R3 = 65 * 10 = 650
                                                            
   97 0000008E EBA1 0303       SUB              R3, R1, R3  ;R3 = 654-650 = 4 
   98 00000092 F103 0330       ADD              R3, #0x30
   99 00000096 F88D 3000       STRB             R3, [SP,#DIGIT] ;access
  100 0000009A F10C 0C01       ADD              R12, #1
  101 0000009E F7FF FFD1       BL               LCD_Fix
  102 000000A2 F1BC 0F02       CMP              R12, #2



ARM Macro Assembler    Page 3 


  103 000000A6 D007            BEQ              dot
  104 000000A8 F89D 0000 
                       back    LDRB             R0, [SP,#DIGIT]
  105 000000AC F7FF FFFE       BL               ST7735_OutChar
  106 000000B0         
  107 000000B0         
  108 000000B0 B002    done2   ADD              SP, #8      ;deallocating
  109 000000B2 E8BD 4010       POP              {R4,LR}
  110 000000B6 4770            BX               LR
  111 000000B8         
  112 000000B8 F04F 002E 
                       dot     MOV              R0, #0x2E   ;R0 = ASCII '.'
  113 000000BC F7FF FFFE       BL               ST7735_OutChar
  114 000000C0 F1AC 0C01       SUB              R12, #1     ;making everything 
                                                            after R12 glitchy
  115 000000C4 E7F0            B                back
  116 000000C6         
  117 000000C6         
  118 000000C6         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  119 000000C6         
  120 000000C6 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  121 000000C8                 END                          ; end of file
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\print.d -o.\print.o -I.\RTE\_Lab8 -IC:\Users\Lily\AppData\Local\
Arm\Packs\ARM\CMSIS\5.6.0\CMSIS\Core\Include -IC:\Users\Lily\AppData\Local\Arm\
Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__UVISION_VERSION
 SETA 529" --predefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --list=
.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 20 in file Print.s
   Uses
      None
Comment: .text unused
LCD_Fix 00000044

Symbol: LCD_Fix
   Definitions
      At line 70 in file Print.s
   Uses
      At line 101 in file Print.s
Comment: LCD_Fix used once
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 30 in file Print.s
   Uses
      At line 17 in file Print.s
      At line 47 in file Print.s

LCD_OutFix 00000040

Symbol: LCD_OutFix
   Definitions
      At line 68 in file Print.s
   Uses
      At line 18 in file Print.s
Comment: LCD_OutFix used once
back 000000A8

Symbol: back
   Definitions
      At line 104 in file Print.s
   Uses
      At line 115 in file Print.s
Comment: back used once
done 00000038

Symbol: done
   Definitions
      At line 51 in file Print.s
   Uses
      At line 39 in file Print.s
Comment: done used once
done2 000000B0

Symbol: done2
   Definitions
      At line 108 in file Print.s
   Uses
      At line 85 in file Print.s
      At line 92 in file Print.s

dot 000000B8



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: dot
   Definitions
      At line 112 in file Print.s
   Uses
      At line 103 in file Print.s
Comment: dot used once
recur 00000016

Symbol: recur
   Definitions
      At line 41 in file Print.s
   Uses
      At line 36 in file Print.s
Comment: recur used once
recur2 00000084

Symbol: recur2
   Definitions
      At line 94 in file Print.s
   Uses
      At line 89 in file Print.s
Comment: recur2 used once
start 00000008

Symbol: start
   Definitions
      At line 35 in file Print.s
   Uses
      None
Comment: start unused
start2 00000074

Symbol: start2
   Definitions
      At line 88 in file Print.s
   Uses
      At line 76 in file Print.s
Comment: start2 used once
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DIGIT 00000000

Symbol: DIGIT
   Definitions
      At line 12 in file Print.s
   Uses
      At line 46 in file Print.s
      At line 48 in file Print.s
      At line 99 in file Print.s
      At line 104 in file Print.s

1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 15 in file Print.s
   Uses
      At line 38 in file Print.s
      At line 49 in file Print.s
      At line 78 in file Print.s
      At line 80 in file Print.s
      At line 82 in file Print.s
      At line 84 in file Print.s
      At line 91 in file Print.s
      At line 105 in file Print.s
      At line 113 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 16 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
348 symbols in table
